name: Update Get-EolInfo Product List

on:
  schedule:
    - cron: '0 0 1 * *' # Runs at 00:00 UTC on the 1st of each month
  workflow_dispatch: # Allows manual triggering

jobs:
  update-product-list:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Check PowerShell version
      - name: Check PowerShell version
        run: |
          pwsh --version
        shell: bash

      # Install GitHub CLI early to ensure availability
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      # Fetch product list and update Get-EolInfo function
      - name: Update Get-EolInfo ValidateSet
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          try {
            # Fetch product list from endoflife.date API
            Write-Output "Fetching products from endoflife.date API..."
            $products = Invoke-RestMethod -Uri 'https://endoflife.date/api/v1/products/' -Method Get -TimeoutSec 10 -ErrorAction Stop
            Write-Output "Retrieved $($products.Count) products"
            
            # Format and sort product list for ValidateSet
            $productList = $products | Sort-Object | ForEach-Object { "`"$_`"" } | Join-String -Separator ', '

            # Read the profile script
            $profilePath = 'Microsoft.PowerShell_profile.ps1'
            if (-not (Test-Path $profilePath)) {
              throw "Profile script not found at $profilePath"
            }
            $scriptContent = Get-Content -Path $profilePath -Raw -Encoding UTF8

            # Define new ValidateSet content
            $newValidateSet = "[ValidateSet($productList)]"

            # Replace existing ValidateSet in Get-EolInfo
            $updatedContent = $scriptContent -replace '\[ValidateSet\([^\)]*\)\]', $newValidateSet

            # Write updated content
            Set-Content -Path $profilePath -Value $updatedContent -Encoding UTF8

            # Check for changes
            git diff --quiet $profilePath || {
              # Configure git
              git config user.name 'github-actions[bot]'
              git config user.email 'github-actions[bot]@users.noreply.github.com'

              # Create a new branch
              $branchName = "update-eol-products-$(Get-Date -Format 'yyyyMMdd')"
              git checkout -b $branchName

              # Commit changes
              git add $profilePath
              git commit -m "Update Get-EolInfo ValidateSet with latest endoflife.date products"

              # Push the branch
              git push origin $branchName

              # Create a pull request using a here-string for clarity
              $prBody = @"
              This PR updates the ValidateSet in Get-EolInfo with the latest products from the endoflife.date API.
              Retrieved $($products.Count) products on $(Get-Date -Format 'yyyy-MM-dd').
              "@
              gh pr create --title "Update Get-EolInfo with latest endoflife.date products" --body "$prBody" --base main --head $branchName
            }
          }
          catch {
            Write-Error "Failed to update Get-EolInfo: $_"
            exit 1
          }
