name: Update Get-EolInfo Product List

on:
  schedule:
    - cron: '0 0 1 * *' # Runs at 00:00 UTC on the 1st of each month
  workflow_dispatch: # Allows manual triggering

jobs:
  update-product-list:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update Get-EolInfo ValidateSet
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.DEV_TOKEN }}
        run: |
          Write-Output "Fetching products from endoflife.date API..."
          $products = $(Invoke-RestMethod -Uri 'https://endoflife.date/api/v1/products/' -Method Get -TimeoutSec 10 -ErrorAction Stop).result
          if (-not $products) {
            Write-Warning "No products returned from API."
            exit 0
          }
          Write-Output "Retrieved $($products.Count) products"
          $productList = ($products | Select-Object -ExpandProperty name | Sort-Object) -join ","
          Write-Output "Product list: $productList"

          $profilePath = 'Microsoft.PowerShell_profile.ps1'
          if (-not (Test-Path $profilePath)) {
            throw "Profile script not found at $profilePath"
          }
          $scriptContent = Get-Content -Path $profilePath -Raw -Encoding UTF8

          $validateSetPattern = '\[ValidateSet\([^\)]*\)\]\s*\[string\]\$productName'
          $newValidateSet = "[ValidateSet($productList)][string]`$productName"
          $updatedContent = $scriptContent -replace $validateSetPattern, $newValidateSet

          if ($updatedContent -eq $scriptContent) {
            Write-Output "No changes to ValidateSet needed."
            exit 0
          }

          Set-Content -Path $profilePath -Value $updatedContent -Encoding UTF8
          Write-Output "Updated ValidateSet for Get-EolInfo in $profilePath"

      - name: Commit and Create PR
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.DEV_TOKEN }}
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          $branchName = "update-eol-products-$(Get-Date -Format 'yyyyMMdd')"
          git checkout -b $branchName
      
          git add Microsoft.PowerShell_profile.ps1
          if (-not (git diff --cached --quiet)) {
            git commit -m 'Update Get-EolInfo ValidateSet with latest endoflife.date products'
            git push origin $branchName
      
            $productCount = (Invoke-RestMethod -Uri 'https://endoflife.date/api/v1/products/' -Method Get).Count
            $prBody = "Updated Get-EolInfo ValidateSet with $productCount products from endoflife.date API on $(Get-Date -Format 'yyyy-MM-dd')."
            gh pr create --title 'Update Get-EolInfo with latest endoflife.date products' --body $prBody --base main --head $branchName
          } else {
            Write-Output "No changes detected. Skipping commit and PR."
          }
